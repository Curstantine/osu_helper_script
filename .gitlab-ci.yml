# !reference https://forum.gitlab.com/t/making-a-binary-release-via-ci-cd/57148/2

stages:
  - test
  - build
  - upload
  - release

variables:
  PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/osu_helper_script/${CI_COMMIT_TAG}"
  FINAL_BIN_NAME: osu_helper_script-${CI_COMMIT_TAG}

test:
  stage: test
  image: "rust:latest"
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - rustc --version && cargo --version 
    - cargo test --workspace --verbose

build:
  stage: build
  image: "rust:latest"
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - cargo build --release
    - mkdir bin
    - mv target/release/osu_helper_script bin/${FINAL_BIN_NAME}
    - mv target/release/tab_completions/ bin/
  cache:
    paths:
      - target/release/
  artifacts:
    paths:
      - bin

upload:
    stage: upload
    image: curlimages/curl:latest
    rules:
      - if: $CI_COMMIT_TAG
    script: bash ./scripts/upload.sh

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - echo "running release_job for $TAG"
  release:
    name: ${CI_COMMIT_TAG}
    tag_name: ${CI_COMMIT_TAG}
    description: "Check and compare commit histories for changes."
    assets:
      links:
        - name: ${FINAL_BIN_NAME}
          url: ${PACKAGE_REGISTRY_URL}/${FINAL_BIN_NAME}